name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3
      
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check formatting
        run: poetry run black --check .

  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install Dependencies using Poetry
        run: poetry install

      - name: Check code
        run: poetry run flake8

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: pip install poetry

      - name: Determine dependencies
        run: poetry lock

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Run fake GCS server
        run: |
          docker run -d -p 4443:4443 -v storage_data:/storage fsouza/fake-gcs-server -scheme http

      - name: Test fake GCS
        run: |
          pip install google-crc32c==1.1.2
          poetry run python tests/test_fake_gcs.py

      - name: Run pytest
        run: poetry run coverage run -m pytest -vv -s tests/tests.py

      - name: Run Coverage
        run: poetry run coverage report -m
